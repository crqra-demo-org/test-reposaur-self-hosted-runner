name: Audit

on:
  workflow_dispatch:

jobs:
  audit:
    name: Audit
    runs-on: self-hosted
    steps:        
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: reposaur/policy

      - env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -e
          set -o pipefail
          os="Linux"
          arch="$(uname -m)"
          repo="reposaur/reposaur"
          tag="v0.4.0"
          filename=""
          url="https://github.com/$repo/releases/download/$tag/reposaur_${tag#v}_${os}_${arch}.tar.gz"
          rm -f reposaur.tar.gz
          curl -sL "$url" > reposaur.tar.gz
          tar zxf reposaur.tar.gz
          rm reposaur.tar.gz
          echo "${{ github.action_path }}" >> $GITHUB_PATH
          sudo cp -f reposaur /usr/local/bin
          sudo cp -f reposaur /usr/bin
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install -y gh         
          pwd
          reposaur --help
          gh api /orgs/crqra-demo-org/repos --paginate \
          | jq -s add
          | reposaur -p $PWD/policy \
          | jq -r '.[] | @base64' \
          | {
            while read r; do
              _r() {
                echo ${r} | base64 -d | jq -r ${1}
              }

              owner=$(_r '.runs[0].properties.owner')
              repo=$(_r '.runs[0].properties.repo')
              branch=$(_r '.runs[0].properties.default_branch')
              commit_sha=$(gh api "/repos/$owner/$repo/branches/$branch" | jq -r '.commit.sha')

              # We've some internal repositories that don't have access to Advanced Security
              # features, since we're on a free plan. Thus the `|| true` in end of the command,
              # to avoid the workflow to exit unsuccessfully in such cases.
              gh api "/repos/$owner/$repo/code-scanning/sarifs" \
                -f sarif="$(_r '.' | gzip | base64)" \
                -f commit_sha="$commit_sha" \
                -f ref="refs/heads/$branch" || true 
            done
          }

#      - name: Setup Reposaur
#        uses: reposaur/reposaur@main

#      - name: Fetch Repos
#        run: |
#          gh api /repos/crqra-demo-org/test-reposaur-self-hosted-runner > repo.json
#        env:
#          GITHUB_TOKEN: ${{ github.token }}

#      - name: Execute Policies
#        run: |
#          cat repo.json | reposaur -p . > report.json
#        env:
#          GITHUB_TOKEN: ${{ github.token }}

#      - name: Upload Artifacts (repos.json)
#        uses: actions/upload-artifact@v3
#        if: always()
#        with:
#          name: repo.json
#          path: repo.json
#          retention-days: 1

#      - name: Upload Artifacts (reports.json)
#        uses: actions/upload-artifact@v3
#        if: always()
#        with:
#          name: report.json
#          path: report.json
#          retention-days: 1
